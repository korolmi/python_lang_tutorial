{"cells": [{"cell_type": "markdown", "id": "shared-hungarian", "metadata": {}, "source": ["Про этот файл - его нужно преобразовать в enb и хранить в репозитории вместе с исходниками, ничего страшного. Для преобразования у нас уже есть код (в agile_edu)."]}, {"cell_type": "markdown", "id": "sporting-pickup", "metadata": {}, "source": ["**Пояснения про процесс работы с туториалом**\n", "\n", "В этой папке/репозитории лежит туториал в том виде, как он \"был\" в викиучебнике. Он в гите даже залейблин. Есть мысль когда-то его выложить обратно (непонятно, нужно ли и хорошо ли получится).\n", "\n", "Исходники - это MD файлы в форматировании викиучебника (с его своеобразием).\n", "\n", "Цикл работы:\n", "\n", "* поправили исходник (например, потому что переводим на новую версию)\n", "* проверили результирующий юпитер (кодом ниже)\n", "    * код генерит файл _new.md \n", "* после того, как все он - закоммитили исходник обратно в гит\n", "\n", "Результат работы генератора - ниже - это уже \"наш\" маркдаун для нашего представления туториала. Его нужно отправить в другой репозиторий просто для того, чтобы он там жил и можно было \"таскать\" и туториал тоже между компами и средами. В том репозитории - agile_edu - эти файлы править НЕЛЬЗЯ. Там живет только content и прочие \"обвязывающие\" файлы.\n", "\n", "Нашлось одно исключение (для правила выше): формат викиучебника не предполагает заголовка первого уровня в файлах, это - выделение заголовка в отдельную ячейку заголовка первого уровня - делаем руками (но один же раз) в agile_edu.\n", "\n", "Эта же информация (возможно, другими словами) есть в README в папке с туториалом в agile_edu."]}, {"cell_type": "markdown", "id": "allied-norman", "metadata": {}, "source": ["**parser.py**\n", "\n", "пока это тупо копия файла из репозитория wiki2jupyter - не придумал, как сделать лучше, пока так. Дальше посмотрим."]}, {"cell_type": "code", "execution_count": null, "id": "powerful-provincial", "metadata": {}, "outputs": [], "source": ["import parser"]}, {"cell_type": "code", "execution_count": null, "id": "secret-sport", "metadata": {}, "outputs": [], "source": ["fName = \"part2\""]}, {"cell_type": "code", "execution_count": null, "id": "compressed-establishment", "metadata": {}, "outputs": [], "source": ["with open(fName+\".md\",\"r\") as fp:\n", "    buf = fp.read()"]}, {"cell_type": "code", "execution_count": null, "id": "equipped-honor", "metadata": {}, "outputs": [], "source": ["buf = parser.getHeaderText() + buf\n", "  \n", "buf = buf\n", "res1 = parser.doProcessing(buf,\"ref\",True,parser.removeProcessor)\n", "res2 = parser.doProcessing(res1,[\"\\n=====\",\"=====\\n\"],False,parser.headerProcessor, 5, True)\n", "res3 = parser.doProcessing(res2,[\"\\n====\",\"====\\n\"],False,parser.headerProcessor, 4, True)\n", "res4 = parser.doProcessing(res3,[\"\\n===\",\"===\\n\"],False,parser.headerProcessor, 3, True)\n", "res5 = parser.doProcessing(res4,[\"\\n==\",\"==\\n\"],False,parser.headerProcessor, 2, True)\n", "res6 = parser.doProcessing(res5,[\"\\n=\",\"=\\n\"],False,parser.headerProcessor, 1, True)\n", "res7 = parser.doProcessing(res6,\"syntaxhighlight\",True,parser.syntaxHighlightProcessor)\n", "res8 = parser.doProcessing(res7,\"texthighlight\",True,parser.indentProcessor)\n", "res9 = parser.doProcessing(res8,[\"[[\",\"]]\"],False,parser.linkProcessor)\n", "\n", "fp = open(fName+\"_new.md\",\"w\")\n", "fp.write(res9.replace(\"\\n\\n\\n\", \"\\n\\n\"))\n", "fp.close()"]}, {"cell_type": "code", "execution_count": null, "id": "fitting-number", "metadata": {}, "outputs": [], "source": []}], "metadata": {"kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.7.7"}}, "nbformat": 4, "nbformat_minor": 5}